funcionarios <- read_csv("www/datos/datos_funcionarios_2021.csv")
instituciones <- funcionarios %>% pull(metadata.institucion) %>% unique() %>% sort()
ing_neto <- readRDS("www/objetos/ingreso_neto_por_curp.rds") %>% ungroup()
ing_desglosado <- readRDS("www/objetos/ingreso_descompuesto_por_curp.rds")  %>% ungroup()
umbral = 150000
total_variaciones = ing_desglosado %>%
# filter(year != 2015) %>%
group_by(curp, year, metadata.institucion) %>%
arrange(curp, year) %>%
summarise(value = sum(value)) %>%
ungroup() %>%
group_by(curp) %>%
mutate(diff = c(diff(value), 0)) %>%
mutate(tipo_variacion = case_when(diff > umbral & year != 2015 ~ "Anomalía",
diff <= umbral ~ "Esperado",
year == 2015 ~ "Esperado"))
total_variaciones
total_variaciones %>%
ungroup()
total_variaciones %>%
ungroup() %>%
group_by(year, metadata.institucion, curp) %>%
summarise()
umbral = 1000000
total_variaciones = ing_desglosado %>%
# filter(year != 2015) %>%
group_by(curp, year, metadata.institucion) %>%
arrange(curp, year) %>%
summarise(value = sum(value)) %>%
ungroup() %>%
group_by(curp) %>%
mutate(diff = c(diff(value), 0)) %>%
mutate(tipo_variacion = case_when(diff > umbral & year != 2015 ~ "Anomalía",
diff <= umbral ~ "Esperado",
year == 2015 ~ "Esperado"))
total_variaciones = ing_desglosado %>%
# filter(year != 2015) %>%
group_by(curp, year, metadata.institucion) %>%
arrange(curp, year) %>%
summarise(value = sum(value)) %>%
ungroup() %>%
group_by(curp) %>%
mutate(diff = c(diff(value), 0)) %>%
mutate(tipo_variacion = case_when(diff > umbral & year != 2015 ~ "Anomalía",
diff <= umbral ~ "Esperado",
year == 2015 ~ "Esperado"))
total_variaciones %>%
ungroup() %>%
group_by(year, metadata.institucion, curp) %>%
summarise()
total_variaciones %>%
ungroup() %>%
group_by(year, metadata.institucion, curp)
total_variaciones %>%
ungroup() %>%
group_by(metadata.institucion, curp) %>%
summarise(no_anomalias <- sum(tipo_variacion == "Anomalía"))
anomalias_por_trabajador <- total_variaciones %>%
ungroup() %>%
group_by(metadata.institucion, curp) %>%
summarise(no_anomalias <- sum(tipo_variacion == "Anomalía"))
anomalias_por_trabajador
anomalias_por_trabajador <- total_variaciones %>%
ungroup() %>%
group_by(metadata.institucion, curp) %>%
summarise(no_anomalias = sum(tipo_variacion == "Anomalía"))
anomalias_por_dependencia <-anomalias_por_trabajador %>%
ungroup() %>%
group_by(metadata.institucion) %>%
summarise(total_anomalias = sum(no_anomalias))
anomalias_por_dependencia
anomalias_por_dependencia$total_anomalias
max(anomalias_por_dependencia$total_anomalias)
min(anomalias_por_dependencia$total_anomalias)
anomalias_por_dependencia
openxlsx::write.xlsx(list(anomalias_por_trabajador,
anomalias_por_dependencia),
"anomalias_por_cambio_ingreso.xlsx")
runApp()
runApp()
anomalias_por_dependencia
anomalias_por_trabajador
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Body ----
dbBody <- dashboardBody(
tags$head(
tags$style(
includeCSS("styles.css")
)
),
tabItems(
# introduccion ------------------------------------------------------------
tabItem(tabName = "int",
h2("What is Lorem Ipsum?"),
p("Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."),
h2("Where does it come from?"),
p('Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of "de Finibus Bonorum et Malorum" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, "Lorem ipsum dolor sit amet..", comes from a line in section 1.10.32.'),
p('The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from "de Finibus Bonorum et Malorum" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.')),
# Por Dependencia ---------------------------------------------------------
tabItem(tabName = "dep",
fluidRow(
column(12,
selectizeInput("selDependencia_1",
"Seleccione Dependencia",
choices = instituciones))
),
fluidRow(
column(12,
plotOutput("gen_grafica_evo_ingreso_por_dependencia") %>% withSpinner()
)
)
),
# Por individuo -----------------------------------------------------------
tabItem(tabName = "ind",
h1("Sistema de Consulta por Individuo", style = 'text-align: center;'),
fluidRow(column(10, offset = 1,
p("En esta sección el usuario podrá consultar la información de las personas a nivel declarante")
)),
fluidRow(
column(4,
wellPanel(
selectInput("selDependencia",
"Seleccione una dependencia",
choices = instituciones),
uiOutput("selIndividuo")
),
valueBoxOutput("caja_carros", width = "100%")
),
column(8,
wellPanel(
uiOutput("nombre_funcionario") %>% withSpinner(),
uiOutput("institucion") %>% withSpinner(),
uiOutput("cargo") %>% withSpinner(),
tabsetPanel(
tabPanel("Histórico de Ingreso Neto", plotOutput("grafica_1") %>% withSpinner()),
tabPanel("Componentes del Ingreso Neto", plotOutput("grafica_origen") %>% withSpinner())
)
)
)
)
)
)
)
runApp()
funcionarios <- read_csv("www/datos/FLAGS_datos_funcionarios_2021.csv")
instituciones <- funcionarios %>% pull(metadata.institucion) %>% unique() %>% sort()
ing_neto <- readRDS("www/objetos/ingreso_neto_por_curp.rds") %>% ungroup()
runApp()
funcionarios <- read_csv("www/datos/FLAGS_datos_funcionarios_2021.csv")
funcionarios
funcionarios <- read_csv("www/datos/FLAGS_datos_funcionarios_2021.csv")
instituciones <- funcionarios %>% pull(metadata.institucion) %>% unique() %>% sort()
funcionarios
funcionarios %>% pull(metadata.institucion)
View(funcionarios)
names(funcionarios)
funcionarios <- read_csv("www/datos/FLAGS_datos_funcionarios_2021.csv") %>%
rename(metadata.institucion = metadata.institucion_x)
instituciones <- funcionarios %>% pull(metadata.institucion) %>% unique() %>% sort()
ing_neto <- readRDS("www/objetos/ingreso_neto_por_curp.rds") %>% ungroup()
ing_desglosado <- readRDS("www/objetos/ingreso_descompuesto_por_curp.rds")  %>% ungroup()
umbral = 500000
runApp()
funcionarios <- read_csv("www/datos/datos_funcionarios_2021.csv")
runApp()
flags <- read_csv("www/datos/FLAGS_datos_funcionarios_2021.csv")
flags
flags <- read_csv("www/datos/FLAGS_datos_funcionarios_2021.csv") %>%
select(curp, contains("flag"))
flags
flags
flags %>%
filter(curp == cur)
# curp_sel = cur
flags %>%
filter(curp == cur)
flags %>%
filter(curp == cur)
View(flags)
flags %>%
filter(curp == cur)
flags %>%
filter(curp == cur)
View(flags)
flags <- read_csv("www/datos/FLAGS_datos_funcionarios_2021.csv")
flags
# Library
library(tidyverse)
# Library
library(tidyverse)
# Objetos.
funcionarios <- read_csv("www/datos/datos_funcionarios_2021.csv")
flags <- read_csv("www/datos/FLAGS_datos_funcionarios_2021.csv")
instituciones <- funcionarios %>% pull(metadata.institucion) %>% unique() %>% sort()
flags <- read_csv("www/datos/FLAGS_datos_funcionarios_2021.csv")
# Objetos.
funcionarios <- read_csv("www/datos/datos_funcionarios_2021.csv")
flags <- read_csv("www/datos/FLAGS_datos_funcionarios_2021.csv")
flags
instituciones <- funcionarios %>% pull(metadata.institucion) %>% unique() %>% sort()
ing_neto <- readRDS("www/objetos/ingreso_neto_por_curp.rds") %>% ungroup()
ing_desglosado <- readRDS("www/objetos/ingreso_descompuesto_por_curp.rds")  %>% ungroup()
umbral = 500000
# Objetos.
funcionarios <- read_csv("www/datos/datos_funcionarios_2021.csv")
flags <- read_csv("www/datos/FLAGS_datos_funcionarios_2021.csv")
instituciones <- funcionarios %>% pull(metadata.institucion) %>% unique() %>% sort()
ing_neto <- readRDS("www/objetos/ingreso_neto_por_curp.rds") %>% ungroup()
ing_desglosado <- readRDS("www/objetos/ingreso_descompuesto_por_curp.rds")  %>% ungroup()
umbral = 500000
funcionarios
funcionarios
flags
lags %>%
select(metadata.institucion_x, contains("flag"))
flags %>%
select(metadata.institucion_x, contains("flag"))
flags %>%
select(metadata.institucion_x, contains("flag")) %>%
pivot_longer(2:ncol(.)) %>%
group_by(metadata.institucion_x, name) %>%
summarise(value = sum(value))  %>%
mutate(name_2  = str_replace_all(name, c("red_flag_sancionado" = "Funcionario Sancionado",
"^red_flag_sancionado_contrataciones$" = "Flag de Contrataciones",
"red_flag_bajo_patrimonio" = "Flag de Bajo Patrimonio Declarado",
"red_flag_alto_patrimonio" = "Flag de Alto Patrimonio Declarado",
"red_flag_cero_patrimonio" = "Flag de Cero Patrimonio",
"red_flag_evolucion_ingreso" = "Flag de la Evolución del Ingreso",
"red_flag_desviacion" = "Flag de Ingreso Extraordinario",
"red_flag_lib_fin" = "Flag de Acumulación extraordinaria de Patrimonio")))
# Flags por Dependencia:
datos_dependencia <- flags %>%
select(metadata.institucion_x, contains("flag")) %>%
pivot_longer(2:ncol(.)) %>%
group_by(metadata.institucion_x, name) %>%
summarise(value = sum(value))  %>%
mutate(name_2  = str_replace_all(name, c("red_flag_sancionado" = "Funcionario Sancionado",
"^red_flag_sancionado_contrataciones$" = "Flag de Contrataciones",
"red_flag_bajo_patrimonio" = "Flag de Bajo Patrimonio Declarado",
"red_flag_alto_patrimonio" = "Flag de Alto Patrimonio Declarado",
"red_flag_cero_patrimonio" = "Flag de Cero Patrimonio",
"red_flag_evolucion_ingreso" = "Flag de la Evolución del Ingreso",
"red_flag_desviacion" = "Flag de Ingreso Extraordinario",
"red_flag_lib_fin" = "Flag de Acumulación extraordinaria de Patrimonio")))
datos_dependencia
shiny::runApp()
datos_dependencia
# Flags por Dependencia:
datos_dependencia <- flags %>%
select(metadata.institucion_x, contains("flag")) %>%
pivot_longer(2:ncol(.)) %>%
group_by(metadata.institucion_x, name) %>%
summarise(value = sum(value))  %>%
mutate(name_2  = str_replace_all(name, c("red_flag_sancionado" = "Funcionario Sancionado",
"red_flag_anomalia_isol" = "Flag de modelo no supervisado",
"^red_flag_sancionado_contrataciones$" = "Flag de Contrataciones",
"red_flag_bajo_patrimonio" = "Flag de Bajo Patrimonio Declarado",
"red_flag_alto_patrimonio" = "Flag de Alto Patrimonio Declarado",
"red_flag_cero_patrimonio" = "Flag de Cero Patrimonio",
"red_flag_evolucion_ingreso" = "Flag de la Evolución del Ingreso",
"red_flag_desviacion" = "Flag de Ingreso Extraordinario",
"red_flag_lib_fin" = "Flag de Acumulación extraordinaria de Patrimonio")))
datos_dependencia
datos_dependencia_total <- datos_dependencia %>%
group_by( metadata.institucion_x) %>%
summarise(value = sum(value))
gen_total_flags_dependencia <- function(dep_sel){
datos_dependencia_total %>%
filter(metadata.institucion_x == dep_sel) %>%
pull(value)
}
runApp()
datos_dependencia
runApp()
runApp()
datos_flags_individuo
runApp()
runApp()
runApp()
datos_dependencia
datos_dependencia_total <- datos_dependencia %>%
group_by( metadata.institucion_x) %>%
summarise(value = sum(value))
datos_dependencia_total
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
funcionarios
datos_dependencia
datos_dependencia_total
datos_dependencia
datos_dependencia %>%
ungroup() %>%
pivot_wider(id_cols = metadata.institucion_x,
values_from = value,
names_from = name_2)
datos_dependencia
datos_dependencia
datos_dependencia %>%
ungroup() %>%
pivot_wider(id_cols = metadata.institucion_x,
values_from = value,
names_from = name_2)
datos_dependencia_suma <- datos_dependencia %>%
group_by(metadata.institucion_x) %>%
summarise(value = sum(value))
datos_dependencia_suma
# Flags por Dependencia:
datos_dependencia_suma <- datos_dependencia %>%
group_by(metadata.institucion_x) %>%
summarise(`Suma de banderas` = sum(value))
datos_dependencia_suma
datos_dependencia %>%
ungroup() %>%
pivot_wider(id_cols = metadata.institucion_x,
values_from = value,
names_from = name_2) %>%
left_join(datos_dependencia_suma)
datos_dependencia %>%
ungroup() %>%
pivot_wider(id_cols = metadata.institucion_x,
values_from = value,
names_from = name_2) %>%
left_join(datos_dependencia_suma)
# Flags por Dependencia:
datos_dependencia_suma <- datos_dependencia %>%
group_by(metadata.institucion_x) %>%
summarise(`Suma total` = sum(value))
datos_dependencia <- flags %>%
select(metadata.institucion_x, contains("flag")) %>%
pivot_longer(2:ncol(.)) %>%
group_by(metadata.institucion_x, name) %>%
summarise(value = sum(value))  %>%
mutate(name_2  = str_replace_all(name, c("red_flag_sancionado" = "Funcionario Sancionado",
"red_flag_anomalia_isol" = "Flag de modelo no supervisado",
"^red_flag_sancionado_contrataciones$" = "Flag de Contrataciones",
"red_flag_bajo_patrimonio" = "Flag de Bajo Patrimonio Declarado",
"red_flag_alto_patrimonio" = "Flag de Alto Patrimonio Declarado",
"red_flag_cero_patrimonio" = "Flag de Cero Patrimonio",
"red_flag_evolucion_ingreso" = "Flag de la Evolución del Ingreso",
"red_flag_desviacion" = "Flag de Ingreso Extraordinario",
"red_flag_lib_fin" = "Flag de Acumulación extraordinaria de Patrimonio")))
runApp()
runApp()
flags
flags
flags
flags_2
flags
flags_2 <- flags %>%
select(curp, nombre, institucion = metadata.institucion_x, contains("flags"))
runApp()
runApp()
flags_2 <- flags %>%
select(curp, nombre, institucion = metadata.institucion_x, contains("flags"))
flags_2
flags_2
flags_2 <- flags %>%
select(curp, nombre, institucion = metadata.institucion_x, contains("flag"))
flags_2
flags_2 %>%
pivot_longer(4:ncol(.))
flags_2 %>%
pivot_longer(4:ncol(.)) %>%
group_by(curp) %>%
summarise(total = sum(value))
flags_2 %>%
pivot_longer(4:ncol(.)) %>%
group_by(curp) %>%
summarise(`Total Banderas` = sum(value))
flags_2 %>%
pivot_longer(4:ncol(.)) %>%
group_by(curp) %>%
summarise(`Total Banderas` = sum(value))
suma_flags <- flags %>%
select(curp, nombre, institucion = metadata.institucion_x, contains("flag")) %>%
pivot_longer(4:ncol(.)) %>%
group_by(curp) %>%
summarise(`Total Banderas` = sum(value))
flags %>%
select(curp, nombre, institucion = metadata.institucion_x, contains("flag")) %>%
left_join(suma_flags)
runApp()
flags %>%
select(curp, nombre, institucion = metadata.institucion_x, contains("flag")) %>%
mutate(across(.cols = contains("flag"), .fns = as.numeric)
flags %>%
select(curp, nombre, institucion = metadata.institucion_x, contains("flag")) %>%
mutate(across(.cols = contains("flag"), .fns = as.numeric))
flags %>%
select(curp, nombre, institucion = metadata.institucion_x, contains("flag")) %>%
mutate(across(.cols = contains("flag"), .fns = as.numeric))
runApp()
runApp()
runApp()
runApp()
runApp()
# Library
library(tidyverse)
# Objetos.
funcionarios <- read_csv("www/datos/datos_funcionarios_2021.csv")
flags <- read_csv("www/datos/FLAGS_datos_funcionarios_2021.csv")
instituciones <- funcionarios %>% pull(metadata.institucion) %>% unique() %>% sort()
ing_neto <- readRDS("www/objetos/ingreso_neto_por_curp.rds") %>% ungroup()
ing_desglosado <- readRDS("www/objetos/ingreso_descompuesto_por_curp.rds")  %>% ungroup()
umbral = 500000
suma_flags <- flags %>%
select(curp, nombre, institucion = metadata.institucion_x, contains("flag")) %>%
pivot_longer(4:ncol(.)) %>%
group_by(curp) %>%
summarise(`Total Banderas` = sum(value))
# Flags por Dependencia:
datos_dependencia_suma <- datos_dependencia %>%
group_by(metadata.institucion_x) %>%
summarise(`Suma total` = sum(value))
datos_dependencia <- flags %>%
select(metadata.institucion_x, contains("flag")) %>%
pivot_longer(2:ncol(.)) %>%
group_by(metadata.institucion_x, name) %>%
summarise(value = sum(value))  %>%
mutate(name_2  = str_replace_all(name, c("red_flag_sancionado" = "Funcionario Sancionado",
"red_flag_anomalia_isol" = "Flag de modelo no supervisado",
"^red_flag_sancionado_contrataciones$" = "Flag de Contrataciones",
"red_flag_bajo_patrimonio" = "Flag de Bajo Patrimonio Declarado",
"red_flag_alto_patrimonio" = "Flag de Alto Patrimonio Declarado",
"red_flag_cero_patrimonio" = "Flag de Cero Patrimonio",
"red_flag_evolucion_ingreso" = "Flag de la Evolución del Ingreso",
"red_flag_desviacion" = "Flag de Ingreso Extraordinario",
"red_flag_lib_fin" = "Flag de Acumulación extraordinaria de Patrimonio")))
datos_dependencia_suma <- datos_dependencia %>%
group_by(metadata.institucion_x) %>%
summarise(`Suma total` = sum(value))
datos_dependencia_total <- datos_dependencia %>%
group_by( metadata.institucion_x) %>%
summarise(value = sum(value))
gen_total_flags_dependencia <- function(dep_sel){
datos_dependencia_total %>%
filter(metadata.institucion_x == dep_sel) %>%
pull(value)
}
dep_sel <- datos_dependencia$metadata.institucion_x[1]
# datos_flags_dependencia <- gen_banderas_dependencia(dep_sel)
gen_banderas_dependencia <- function(dep_sel){
datos_dependencia %>%
filter(metadata.institucion_x == dep_sel)
}
total_variaciones = ing_desglosado %>%
# filter(year != 2015) %>%
group_by(curp, year, metadata.institucion) %>%
arrange(curp, year) %>%
summarise(value = sum(value)) %>%
ungroup() %>%
group_by(curp) %>%
mutate(diff = c(diff(value), 0)) %>%
mutate(tipo_variacion = case_when(diff > umbral & year != 2015 ~ "Anomalía",
diff <= umbral ~ "Esperado",
year == 2015 ~ "Esperado"))
# Funciones propias: ----
gen_funcionarios_por_inst <- function(inst_sel){
bi <- funcionarios %>%
filter(metadata.institucion == inst_sel)
nombres <- bi$curp
names(nombres) <- bi$nombre
return(nombres)
}
gen_ingreso_desglosado_dependencia <- function(inst_sel){
bd = total_variaciones %>%
filter(metadata.institucion == inst_sel)
}
# Gráfica de evolucion ----
cur = "SAAC850107MPUNRC02"
# datx <- gen_flag_data(cur)
gen_flag_data <- function(curp_sel){
# curp_sel = cur
datos_flag <- flags %>%
filter(curp == curp_sel) %>%
select(curp, contains("flag")) %>%
pivot_longer(2:ncol(.)) %>%
mutate(name_2  = str_replace_all(name, c("red_flag_sancionado" = "Funcionario Sancionado",
"^red_flag_sancionado_contrataciones$" = "Flag de Contrataciones",
"red_flag_anomalia_isol" = "Flag de modelo no supervisado",
"red_flag_bajo_patrimonio" = "Flag de Bajo Patrimonio Declarado",
"red_flag_alto_patrimonio" = "Flag de Alto Patrimonio Declarado",
"red_flag_cero_patrimonio" = "Flag de Cero Patrimonio",
"red_flag_evolucion_ingreso" = "Flag de la Evolución del Ingreso",
"red_flag_desviacion" = "Flag de Ingreso Extraordinario",
"red_flag_lib_fin" = "Flag de Acumulación extraordinaria de Patrimonio")))
datos_flag$name_2[2]  <- "Flag de Contrataciones"
return(datos_flag)
}
total_flags <- function(data_flags){
valor = data_flags %>%
pull(value) %>%
sum()
return(valor)
}
runApp()
runApp('~/Downloads/proy_final_clase_2020')
runApp('~/Downloads/proy_final_clase_2020')
runApp()
runApp()
runApp()
